# serverless.yml

# The service name
service: expence-manager-nuxt-serverless

# provider information
# we are deploying on aws using the node 10.x runtime.
provider:
  name: aws
  runtime: nodejs12.x
  region: ap-northeast-1
  environment:
    SSR_API_PROTOCOL: ${file(./.env.${opt:stage, self:provider.stage, 'dev'}.json):SSR_API_PROTOCOL}
    SSR_API_DOMAIN:  ${file(./.env.${opt:stage, self:provider.stage, 'dev'}.json):SSR_API_DOMAIN}
    SSR_API_PORT:  ${file(./.env.${opt:stage, self:provider.stage, 'dev'}.json):SSR_API_PORT}
    SSR_API_BASE_PATH:  ${file(./.env.${opt:stage, self:provider.stage, 'dev'}.json):SSR_API_BASE_PATH}
    CSR_API_PROTOCOL:  ${file(./.env.${opt:stage, self:provider.stage, 'dev'}.json):CSR_API_PROTOCOL}
    CSR_API_DOMAIN:  ${file(./.env.${opt:stage, self:provider.stage, 'dev'}.json):CSR_API_DOMAIN}
    CSR_API_PORT:  ${file(./.env.${opt:stage, self:provider.stage, 'dev'}.json):CSR_API_PORT}
    CSR_API_BASE_PATH:  ${file(./.env.${opt:stage, self:provider.stage, 'dev'}.json):CSR_API_BASE_PATH}

functions:
  app:
    handler: lambda.nuxt
    events:
      - http: ANY /
      - http: ANY /{proxy+}
    vpc:
      securityGroupIds:
        - sg-055e7ceaa59dbe625
        - sg-055e7ceaa59dbe625
      subnetIds:
        - subnet-c2b39e99
        - subnet-e05ba8a8

# Add those plugins to our service
plugins:
  - serverless-offline
  - serverless-apigw-binary
  - serverless-domain-manager

custom:
  apigwBinary:
    types:
      - '*/*'
  # カスタムドメインの設定
  # TODO ステージごとにドメイン切り替え
  customDomain:
    domainName: expense-manager.cloud
    certificateName: 'expense-manager.cloud'
    basePath: ''
    stage: prod
    createRoute53Record: true
  serverless-offline:
    httpPort: 8000
    lambdaPort: 8001
#package:
#  exclude:
#    - .dynamodb/**
#    - serverless.yml
#    - bitbucket-pipelines.yml
#    - package.json
#    - package-lock.json
#    - .gitignore
#    - README.md
#  excludeDevDependencies: true
#  individually: true

